<div id="fb-root"></div>
<div class="masthead background3" >

<div class="container">

		<div class="signupholder">
		</div>
		
			<div class="welcomebox">
				<%= render partial: "signup" %>
			</div>


	
</div>
</div>

<div class="container-fluid main-container">
	<div class="row">
		<div class="secondary-headers">
			 <h2 class="second_welcome">bringing dog owners together DEPLOY TEST</h2>
			  <h3 class="second-subheader">bad ass since 2013</h3>
			  <fb:login-button show-faces="true" width="200" max-rows="1"></fb:login-button>
			  <button class="logout">Logout</button>
		</div>


			<div class="welcomedeets-sitters">

				<img class="sitterphoto" alt="rams" src="/assets/rams.png" width="350" height="350">
				<img class="sitterphoto middlesitter" alt="rams" width="350" height="350" src="/assets/jon.jpg">
				<img class="sitterphoto" alt="Des" src="/assets/des.jpg" height="350" width="350"> 
			</div>

			<div class="welcome-quotes">
				Hi April, Your website looks awesome,  Keep it up. - Love, Dad  
			<div>

	</div>
</div>


<script type="text/javascript">

///////////////////
///  FB LOGIN  ///
//////////////////


window.fbAsyncInit = function() {
    // init the FB JS SDK
    FB.init({
      appId      : '708682375838063',                        // App ID from the app dashboard
      status     : true,                                 // Check Facebook Login status
      xfbml      : true                                  // Look for social plugins on the page
    });

    // Additional initialization code such as adding Event Listeners goes here

    FB.Event.subscribe('auth.authResponseChange', function(response) {
	    // Here we specify what we do with the response anytime this event occurs. 
	    if (response.status === 'connected') {
	    	
	      // The response object is returned with a status field that lets the app know the current
	      // login status of the person. In this case, we're handling the situation where they 
	      // have logged in to the app.
	      testAPI();
	    } else if (response.status === 'not_authorized') {
	      // In this case, the person is logged into Facebook, but not into the app, so we call
	      // FB.login() to prompt them to do so. 
	      // In real-life usage, you wouldn't want to immediately prompt someone to login 
	      // like this, for two reasons:
	      // (1) JavaScript created popup windows are blocked by most browsers unless they 
	      // result from direct interaction from people using the app (such as a mouse click)
	      // (2) it is a bad experience to be continually prompted to login upon page load.
	      //FB.login();
	    } else {
	      // In this case, the person is not logged into Facebook, so we call the login() 
	      // function to prompt them to do so. Note that at this stage there is no indication
	      // of whether they are logged into the app. If they aren't then they'll see the Login
	      // dialog right after they log in to Facebook. 
	      // The same caveats as above apply to the FB.login() call here.
	      console.log("logged out")
	    }
    });

		$(".logout").on("click", function() {
			FB.logout(function(response) {
   		window.location.href = "/";
			});
		});
};

  // Load the SDK asynchronously
  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "//connect.facebook.net/en_US/all.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));
  
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Good to see you, ' + response.name + '.');
    });
  }

</script>


